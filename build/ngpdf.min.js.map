{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ngpdf.min.js","webpack:///webpack/bootstrap 1420a3550a03f493e5bf","webpack:///external \"angular\"","webpack:///external \"pdfjs-dist\"","webpack:///./index.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","_angular","_angular2","_pdfjsDist","_pdfjsDist2","pdfjs","PDFJS","component","template","controller","$element","$timeout","$ctrl","canvas","getPDF","url","Promise","resolve","reject","getDocument","then","pdf","getPage","page","renderPage","viewport","getViewport","width","height","ctx","getContext","render","canvasContext","changePage","loading","$onInit","window","console","error","disableWorker","find"],"mappings":"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","file":"ngpdf.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"pdfjs-dist\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ngpdf\", [\"angular\", \"pdfjs-dist\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngpdf\"] = factory(require(\"angular\"), require(\"pdfjs-dist\"));\n\telse\n\t\troot[\"ngpdf\"] = factory(root[\"angular\"], root[\"pdfjs-dist\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"pdfjs-dist\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ngpdf\", [\"angular\", \"pdfjs-dist\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngpdf\"] = factory(require(\"angular\"), require(\"pdfjs-dist\"));\n\telse\n\t\troot[\"ngpdf\"] = factory(root[\"angular\"], root[\"pdfjs-dist\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _angular = __webpack_require__(0);\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _pdfjsDist = __webpack_require__(1);\n\nvar _pdfjsDist2 = _interopRequireDefault(_pdfjsDist);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar pdfjs = void 0;\nif (_pdfjsDist2.default) pdfjs = _pdfjsDist2.default.PDFJS;\n\nexports.default = _angular2.default.module('ngPdf', []).component('ngPdf', {\n    template: '\\n            <style>\\n                .ng-pdf-container {\\n                    background-color: rgb(82, 86, 89);\\n                    padding: 60px 5px 5px 5px;\\n                    text-align: center;\\n                    position: relative;\\n                }\\n\\n                .ng-pdf-header {\\n                    position: absolute;\\n                    top: 0;\\n                    left: 0;\\n                    height: 50px;\\n                    line-height: 50px;                \\n                    width: 100%;\\n                    background-color: rgb(50, 54, 57);\\n                    color: rgb(241, 241, 241);\\n                    font-size: 0.9em;\\n                    font-family: Helvetica;\\n                    box-shadow: 0px 0px 10px #000;                \\n                }\\n\\n                .ng-pdf-button {\\n                    background-color: transparent;\\n                    border: none;\\n                    color: #fff;\\n                    font-size: 1.5em;\\n                    outline: none;\\n                    cursor: pointer;\\n                    line-height: 45px;\\n                }\\n\\n                .ng-pdf-button-right {\\n                    float: right;\\n                }\\n\\n                .ng-pdf-button-left {\\n                    float: left;\\n                }\\n\\n                .ng-pdf-page {\\n                    max-width: 100%;\\n                    box-shadow: 0px 0px 10px #000;\\n                    background-color: #fff;\\n                }\\n            </style>\\n            <div class=\"ng-pdf-container\">\\n                <div class=\"ng-pdf-header\">\\n                    <button\\n                        class=\"ng-pdf-button ng-pdf-button-left\"\\n                        ng-click=\"$ctrl.changePage($ctrl.page - 1)\"\\n                        ng-disabled=\"$ctrl.loading || $ctrl.page == 1\">\\n                        &#9668;\\n                    </button>\\n                    <span ng-if=\"!$ctrl.loading\">{{$ctrl.page}} / {{$ctrl.pdf.numPages}}</span>\\n                    <span ng-if=\"$ctrl.loading\">Loading</span>                \\n                    <button\\n                        class=\"ng-pdf-button ng-pdf-button-right\"                \\n                        ng-click=\"$ctrl.changePage($ctrl.page + 1)\"\\n                        ng-disabled=\"$ctrl.loading || $ctrl.page == $ctrl.pdf.numPages\">\\n                        &#9658;\\n                    </button>\\n                </div>\\n                <canvas class=\"ng-pdf-page\" ng-show=\"!$ctrl.loading\"></canvas>\\n            </div>\\n        ',\n    controller: function controller($element, $timeout) {\n        var $ctrl = this;\n        var canvas = null;\n\n        // PDF Functions\n        var getPDF = function getPDF(url) {\n            return new Promise(function (resolve, reject) {\n                pdfjs.getDocument(url).then(function (pdf) {\n                    resolve(pdf);\n                });\n            });\n        };\n\n        var getPage = function getPage(pdf, n) {\n            return new Promise(function (resolve, reject) {\n                pdf.getPage(n).then(function (page) {\n                    resolve(page);\n                });\n            });\n        };\n\n        var renderPage = function renderPage(page, canvas) {\n            return new Promise(function (resolve, reject) {\n                var viewport = page.getViewport(1.0);\n                canvas.width = viewport.width;\n                canvas.height = viewport.height;\n                var ctx = canvas.getContext('2d');\n                page.render({\n                    canvasContext: ctx,\n                    viewport: viewport\n                }).then(function () {\n                    return resolve();\n                });\n            });\n        };\n\n        // Controls\n        $ctrl.changePage = function (n) {\n            $ctrl.page = n;\n            $ctrl.loading = true;\n            getPage($ctrl.pdf, n).then(function (page) {\n                renderPage(page, canvas).then(function () {\n                    $timeout(function () {\n                        $ctrl.loading = false;\n                    });\n                });\n            });\n        };\n\n        $ctrl.$onInit = function () {\n            if (window.PDFJS) {\n                pdfjs = window.PDFJS;\n            }\n\n            if (!pdfjs) {\n                console.error(\"[ngPdf] PDF.js is not loaded\");\n                return;\n            }\n\n            pdfjs.disableWorker = true;\n            $ctrl.loading = true;\n            $ctrl.page = 0;\n            canvas = $element.find(\"canvas\")[0];\n            getPDF(\"sample.pdf\").then(function (pdf) {\n                $timeout(function () {\n                    $ctrl.pdf = pdf;\n                    $ctrl.changePage(1);\n                });\n            });\n        };\n    }\n}).name;\n;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// ngpdf.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1420a3550a03f493e5bf","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"angular\"\n// module id = 0\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pdfjs-dist\"\n// module id = 1\n// module chunks = 0","import angular from 'angular';\nimport pdfjsDist from 'pdfjs-dist';\n\nlet pdfjs;\nif(pdfjsDist) pdfjs = pdfjsDist.PDFJS;\n\nexport default angular\n    .module('ngPdf', [])\n    .component('ngPdf', {\n        template: `\n            <style>\n                .ng-pdf-container {\n                    background-color: rgb(82, 86, 89);\n                    padding: 60px 5px 5px 5px;\n                    text-align: center;\n                    position: relative;\n                }\n\n                .ng-pdf-header {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    height: 50px;\n                    line-height: 50px;                \n                    width: 100%;\n                    background-color: rgb(50, 54, 57);\n                    color: rgb(241, 241, 241);\n                    font-size: 0.9em;\n                    font-family: Helvetica;\n                    box-shadow: 0px 0px 10px #000;                \n                }\n\n                .ng-pdf-button {\n                    background-color: transparent;\n                    border: none;\n                    color: #fff;\n                    font-size: 1.5em;\n                    outline: none;\n                    cursor: pointer;\n                    line-height: 45px;\n                }\n\n                .ng-pdf-button-right {\n                    float: right;\n                }\n\n                .ng-pdf-button-left {\n                    float: left;\n                }\n\n                .ng-pdf-page {\n                    max-width: 100%;\n                    box-shadow: 0px 0px 10px #000;\n                    background-color: #fff;\n                }\n            </style>\n            <div class=\"ng-pdf-container\">\n                <div class=\"ng-pdf-header\">\n                    <button\n                        class=\"ng-pdf-button ng-pdf-button-left\"\n                        ng-click=\"$ctrl.changePage($ctrl.page - 1)\"\n                        ng-disabled=\"$ctrl.loading || $ctrl.page == 1\">\n                        &#9668;\n                    </button>\n                    <span ng-if=\"!$ctrl.loading\">{{$ctrl.page}} / {{$ctrl.pdf.numPages}}</span>\n                    <span ng-if=\"$ctrl.loading\">Loading</span>                \n                    <button\n                        class=\"ng-pdf-button ng-pdf-button-right\"                \n                        ng-click=\"$ctrl.changePage($ctrl.page + 1)\"\n                        ng-disabled=\"$ctrl.loading || $ctrl.page == $ctrl.pdf.numPages\">\n                        &#9658;\n                    </button>\n                </div>\n                <canvas class=\"ng-pdf-page\" ng-show=\"!$ctrl.loading\"></canvas>\n            </div>\n        `,\n        controller: function ($element, $timeout) {\n            const $ctrl = this;\n            let canvas = null;\n\n            // PDF Functions\n            const getPDF = url => {\n                return new Promise((resolve, reject) => {\n                    pdfjs.getDocument(url).then(pdf => {\n                        resolve(pdf);\n                    });\n                });\n            }\n\n            const getPage = (pdf, n) => {\n                return new Promise((resolve, reject) => {\n                    pdf.getPage(n).then(page => {\n                        resolve(page);\n                    });\n                });\n            }\n\n            const renderPage = (page, canvas) => {\n                return new Promise((resolve, reject) => {\n                    var viewport = page.getViewport(1.0);\n                    canvas.width = viewport.width;\n                    canvas.height = viewport.height;\n                    var ctx = canvas.getContext('2d');\n                    page.render({\n                        canvasContext: ctx,\n                        viewport: viewport\n                    }).then(() => resolve());\n                });\n            }\n\n            // Controls\n            $ctrl.changePage = n => {\n                $ctrl.page = n;\n                $ctrl.loading = true;\n                getPage($ctrl.pdf, n).then(page => {\n                    renderPage(page, canvas).then(() => {\n                        $timeout(() => {\n                            $ctrl.loading = false;\n                        });\n                    });\n                });\n            }\n\n            $ctrl.$onInit = function () {\n                if(window.PDFJS) {\n                    pdfjs = window.PDFJS;\n                }\n\n                if (!pdfjs) {\n                    console.error(\"[ngPdf] PDF.js is not loaded\");\n                    return;\n                }             \n\n                pdfjs.disableWorker = true;\n                $ctrl.loading = true;\n                $ctrl.page = 0;\n                canvas = $element.find(\"canvas\")[0];\n                getPDF(\"sample.pdf\").then(pdf => {\n                    $timeout(() => {\n                        $ctrl.pdf = pdf;\n                        $ctrl.changePage(1);\n                    });\n                });\n            }\n        }\n    })\n    .name;;\n\n\n// WEBPACK FOOTER //\n// ./index.js"],"sourceRoot":""}